plugins {
    id 'java'
    id 'application'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation group: 'io.jhdf', name: 'jhdf', version: '0.6.10'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    implementation group: 'org.apache.lucene', name: 'lucene-core', version: '10.0.0-SNAPSHOT'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

compileJava {
    options.compilerArgs += ['--add-modules', 'jdk.incubator.vector']
}
compileTestJava {
    options.compilerArgs += ['--add-modules', 'jdk.incubator.vector']
}

test {
    useJUnitPlatform()
    jvmArgs '--add-modules=jdk.incubator.vector'
}

task runSimple(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.example.SimpleExample'
}

task runBench(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.example.Bench'
    if (project.hasProperty('datasetName')) {
        args datasetName
    }
    jvmArgs '--add-modules=jdk.incubator.vector', '-Xmx32G', "-ea"
    // jvmArgs '-XX:+FlightRecorder', '-XX:StartFlightRecording:filename=flight.jfr'
}
